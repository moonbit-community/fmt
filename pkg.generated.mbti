// Generated using `moon info`, DON'T EDIT IT
package "BigOrangeQWQ/fmt"

import(
  "moonbitlang/core/bigint"
)

// Values
fn fprintln(String, Array[&Formatter]) -> Unit

fn fstring(String, Array[&Formatter]) -> String

// Errors

// Types and methods
type FormatSpec
impl Show for FormatSpec

// Type aliases

// Traits
pub(open) trait Formatter {
  format(Self, FormatSpec) -> String = _
  format_stream(Self, FormatSpec, StringBuilder) -> Unit
  display(Self, FormatSpec, &Logger) -> Unit = _
}
impl Formatter for Bool
impl Formatter for Char
impl Formatter for Int
impl Formatter for Int16
impl Formatter for Int64
impl Formatter for UInt
impl Formatter for UInt16
impl Formatter for UInt64
impl Formatter for Float
impl Formatter for Double
impl Formatter for String
impl[T : ToJson] Formatter for FixedArray[T]
impl Formatter for @bigint.BigInt
impl[T : ToJson] Formatter for Array[T]
impl Formatter for Json
impl[K : Show, V : ToJson] Formatter for Map[K, V]
impl[T : ToJson] Formatter for (T, T)
impl[T : ToJson] Formatter for (T, T, T)
impl[T : ToJson] Formatter for (T, T, T, T)
impl[T : ToJson] Formatter for (T, T, T, T, T)
impl[T : ToJson] Formatter for (T, T, T, T, T, T)
impl[T : ToJson] Formatter for (T, T, T, T, T, T, T)

