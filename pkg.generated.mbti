// Generated using `moon info`, DON'T EDIT IT
package "BigOrangeQWQ/fmt"

import(
  "moonbitlang/core/bigint"
)

// Values
fn fprintln(String, Array[&Formatter]) -> Unit

fn fstring(String, Array[&Formatter]) -> String

// Errors

// Types and methods
pub enum Align {
  Left
  Right
  Center
  Default
}
impl Eq for Align
impl Show for Align

pub struct FormatSpec {
  options : Options
  width : Int?
  grouping : Grouping
  precision : Int?
  typ : SpecType
}
impl Show for FormatSpec

pub enum Grouping {
  Comma
  Underscore
  Default
}
impl Show for Grouping

pub struct Options {
  fill : Char?
  align : Align
  mut sharp : Bool
  mut zero : Bool
}
impl Show for Options

pub enum SpecType {
  Binary
  Digit
  ExponentLower
  ExponentUpper
  Float
  Octal
  HexLower
  HexUpper
  Percent
  Default
}
impl Show for SpecType

type Typing

// Type aliases

// Traits
pub(open) trait Formatter : Show {
  format(Self, FormatSpec) -> String = _
  format_stream(Self, FormatSpec, StringBuilder) -> Unit
  display(Self, FormatSpec, &Logger) -> Unit = _
}
impl Formatter for Bool
impl Formatter for Char
impl Formatter for Int
impl Formatter for Int16
impl Formatter for Int64
impl Formatter for UInt
impl Formatter for UInt16
impl Formatter for UInt64
impl Formatter for Float
impl Formatter for Double
impl Formatter for String
impl Formatter for @bigint.BigInt
impl Formatter for Json

